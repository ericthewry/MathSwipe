// Generated by CoffeeScript 1.9.3
(function() {
  var InputSolver, expect;

  InputSolver = require('../app/InputSolver');

  expect = chai.expect;

  describe('InputSolver', function() {
    describe('#isOperator()', function() {
      var isOp;
      isOp = InputSolver.isOperator;
      it('should return true when value is operator', function() {
        (expect(isOp('+'))).to.equal(true);
        (expect(isOp('-'))).to.equal(true);
        return (expect(isOp('*'))).to.equal(true);
      });
      it('should return false when value is not an operator', function() {
        (expect(isOp('1'))).to.equal(false);
        return (expect(isOp('?'))).to.equal(false);
      });
      return it('should return false when input is empty', function() {
        return (expect(isOp(''))).to.equal(false);
      });
    });
    describe('#operation()', function() {
      var OP;
      OP = function(operation) {
        return InputSolver.operation(12, '3', operation);
      };
      it('adds when given plus sign', function() {
        return (expect(OP('+'))).to.equal(15);
      });
      it('subtracts when given minus sign', function() {
        return (expect(OP('-'))).to.equal(9);
      });
      it('mulitplies when given star', function() {
        return (expect(OP('*'))).to.equal(36);
      });
      return it('performs no operation when given invalid op', function() {
        return (expect(OP('7'))).to.equal(12);
      });
    });
    return describe('#compute()', function() {
      var compute;
      compute = function(str) {
        return InputSolver.compute(str);
      };
      it('linearly evaluates numbers', function() {
        expect(compute('12')).to.equal(12);
        return expect(compute('4')).to.equal(4);
      });
      it('linear evaluates simple expressions', function() {
        expect(compute('1+3')).to.equal(4);
        expect(compute('4*3')).to.equal(12);
        return expect(compute('3-7')).to.equal(-4);
      });
      it('doesn\'t evaluate incomplete expressions', function() {
        expect(compute('1+')).to.equal(1);
        return expect(compute('1+7*')).to.equal(8);
      });
      return it('doesn\'t follow the order of operations', function() {
        return expect(compute('3-1*4')).to.equal(8);
      });
    });
  });

}).call(this);
