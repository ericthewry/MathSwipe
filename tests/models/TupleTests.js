// Generated by CoffeeScript 1.9.3
var GameGrid, Tuple;

Tuple = require(app_path + "/models/Tuple");

GameGrid = require(app_path + "/models/GameGrid");

describe('Tuple', function() {
  var tupAt;
  tupAt = function(x, y) {
    return new Tuple(x, y);
  };
  describe('#constructor', function() {
    var tuple;
    tuple = new Tuple(1, -1);
    return it('initilizes inputs as get-table fields', function() {
      (expect(tuple.x)).to.equal(1);
      return (expect(tuple.y)).to.equal(-1);
    });
  });
  describe('#equals', function() {
    it('returns true when same co-ordinates are equal', function() {
      return (expect((tupAt(1, 1)).equals(tupAt(1, 1)))).to.equal(true);
    });
    it('returns false when one coordinate is different', function() {
      (expect((tupAt(1, 0)).equals(tupAt(1, 1)))).to.equal(false);
      (expect((tupAt(1, 1)).equals(tupAt(1, 0)))).to.equal(false);
      (expect((tupAt(1, 1)).equals(tupAt(0, 1)))).to.equal(false);
      return (expect((tupAt(0, 1)).equals(tupAt(1, 1)))).to.equal(false);
    });
    return it('returns false when both coordinates are different', function() {
      return (expect((tupAt(1, 1)).equals(tupAt(0, 0)))).to.equal(false);
    });
  });
  return describe('#isElementOf', function() {
    var tupleList;
    tupleList = [];
    tupAt = function(x, y) {
      return new Tuple(x, y);
    };
    it('returns true when the tuple is equal to another in the list', function() {
      tupleList = [tupAt(1, 1), tupAt(0, 0)];
      (expect((tupAt(1, 1)).isElementOf(tupleList))).to.equal(true);
      return (expect((tupAt(0, 0)).isElementOf(tupleList))).to.equal(true);
    });
    it('returns false if it is not in the list', function() {
      tupleList = [tupAt(1, 1, tupAt(0, 0))];
      return (expect((tupAt(9, 9)).isElementOf(tupleList))).to.equal(false);
    });
    it('returns false if the list is empty', function() {
      tupleList = [];
      return (expect((tupAt(1, 1)).isElementOf(tupleList))).to.equal(false);
    });
    return it('returns false if the list is null', function() {
      tupleList = [null, null, null];
      return (expect((tupAt(1, 1)).isElementOf(tupleList))).to.equal(false);
    });
  });
});
