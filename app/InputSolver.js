// Generated by CoffeeScript 1.9.3
var InputSolver;

InputSolver = (function() {
  function InputSolver() {}

  InputSolver.parseInput = function(input) {
    var numberRegex, numbers;
    numberRegex = /([0-9]+|[\+\-\*])/g;
    return numbers = input.match(numberRegex);
  };

  InputSolver.isOperator = function(element) {
    return element === "+" || element === "-" || element === "*";
  };

  InputSolver.operation = function(sum, element, op) {
    if (op === "+") {
      sum = sum + parseInt(element);
    } else if (op === "-") {
      sum = sum - parseInt(element);
    } else if (op === "*") {
      sum = sum * parseInt(element);
    }
    return sum;
  };

  InputSolver.compute = function(input) {
    var element, i, len, previous, sum;
    input = this.parseInput(input);
    previous = input[0];
    sum = parseInt(input[0]);
    if (isNaN(sum)) {
      return NaN;
    }
    for (i = 0, len = input.length; i < len; i++) {
      element = input[i];
      if ((this.isOperator(previous)) && (this.isOperator(element))) {
        return sum;
      }
      sum = this.operation(sum, element, previous);
      previous = element;
    }
    return sum;
  };

  return InputSolver;

})();

module.exports = InputSolver;
