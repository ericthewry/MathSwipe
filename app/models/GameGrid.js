// Generated by CoffeeScript 1.9.3
var GameGrid, GridCell,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

GridCell = require('./GridCell');

GameGrid = (function() {
  function GameGrid(dimension) {
    var col, i, j, ref, ref1, row;
    this.dimension = dimension;
    this.setEmpty = bind(this.setEmpty, this);
    this.isEmpty = bind(this.isEmpty, this);
    this.at = bind(this.at, this);
    this.validIndices = bind(this.validIndices, this);
    this.set = bind(this.set, this);
    this.grid = [];
    for (row = i = 0, ref = this.dimension; 0 <= ref ? i < ref : i > ref; row = 0 <= ref ? ++i : --i) {
      this.grid.push([]);
      for (col = j = 0, ref1 = this.dimension; 0 <= ref1 ? j < ref1 : j > ref1; col = 0 <= ref1 ? ++j : --j) {
        this.grid[row].push(new GridCell(col, row));
      }
    }
  }

  GameGrid.prototype.set = function(x, y, element) {
    if (!this.validIndices(x, y)) {
      return false;
    }
    this.grid[y][x].value = element;
    return true;
  };

  GameGrid.prototype.validIndices = function(x, y) {
    return x < this.dimension && x >= 0 && y < this.dimension && y >= 0;
  };

  GameGrid.prototype.at = function(x, y) {
    if (!this.validIndices(x, y)) {
      return null;
    }
    return this.grid[y][x];
  };

  GameGrid.prototype.isEmpty = function(x, y) {
    return this.grid[y][x].isEmpty();
  };

  GameGrid.prototype.setEmpty = function(x, y) {
    return this.set(x, y, ' ');
  };

  return GameGrid;

})();

module.exports = GameGrid;
