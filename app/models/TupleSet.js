// Generated by CoffeeScript 1.9.3
var TupleSet,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

TupleSet = (function() {
  function TupleSet(tuples) {
    var i, len, t;
    if (tuples == null) {
      tuples = [];
    }
    this.contains = bind(this.contains, this);
    this.at = bind(this.at, this);
    this.length = bind(this.length, this);
    this.pop = bind(this.pop, this);
    this.push = bind(this.push, this);
    this.list = [];
    for (i = 0, len = tuples.length; i < len; i++) {
      t = tuples[i];
      this.push(t);
    }
  }

  TupleSet.prototype.push = function(tuple) {
    if (!(tuple === null || this.contains(tuple))) {
      return this.list.push(tuple);
    }
  };

  TupleSet.prototype.pop = function() {
    return this.list.pop();
  };

  TupleSet.prototype.length = function() {
    return this.list.length;
  };

  TupleSet.prototype.at = function(idx) {
    if (idx < this.length()) {
      return this.list[idx];
    }
    return null;
  };

  TupleSet.prototype.contains = function(tuple) {
    var i, len, ref, t;
    ref = this.list;
    for (i = 0, len = ref.length; i < len; i++) {
      t = ref[i];
      if (tuple.equals(t)) {
        return true;
      }
    }
    return false;
  };

  return TupleSet;

})();

module.exports = TupleSet;
